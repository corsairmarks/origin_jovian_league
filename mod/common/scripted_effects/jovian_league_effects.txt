# triggered by empire_init_capital_planet
# this = country (owner of the previous planet)
setup_secondary_species = {
	optimize_memory
	if = {
		limit = {
			OR = {
				has_valid_civic = civic_machine_assimilator
				has_valid_civic = civic_machine_servitor
				has_origin = origin_jovian_league_syncretic
				has_origin = origin_jovian_league_necrophage
			}
		}
		if = {
			limit = { last_created_species = { is_lithoid = yes } }
			set_country_flag = lithoid_subspecies
		}
		else = {
			set_country_flag = non_lithoid_subspecies
		}
	}

	if = {
		limit = {
			OR = {
				has_origin = origin_jovian_league_syncretic
				has_origin = origin_jovian_league_necrophage
			}
		}
		last_created_species = {
			set_species_flag = syncretic_species@prev
			# syncretic/necrophage secondary species rights reset in origin_jovian_league.5
			save_event_target_as = jovian_league_secondary_species
		}
	}
	else_if = {
		limit = { has_valid_civic = civic_machine_servitor }
		last_created_species = {
			set_species_flag = organic_trophy_species@prev
			set_citizenship_type = {
				country = prev
				type = citizenship_limited
			}
			set_living_standard = {
				country = prev
				type = living_standard_organic_trophy
			}
			save_event_target_as = jovian_league_secondary_species
		}
	}
	else_if = {
		limit = { has_valid_civic = civic_machine_assimilator }
		last_created_species = {
			set_species_flag = cyborg_species@prev
			set_citizenship_type = {
				country = prev
				type = citizenship_full_machine
			}
			set_living_standard = {
				country = prev
				type = living_standard_hive_mind
			}
			save_event_target_as = jovian_league_secondary_species
		}
	}
	else_if = {
		limit = { has_origin = origin_jovian_league_mechanists }
		create_built_robot_species = yes
		last_created_species = {
			set_species_flag = mechanist_robot_species@prev
			save_event_target_as = jovian_league_secondary_species
		}
	}
}

# used to set up a planet with the terraforming_candidate modifier
# this = planet
generate_jovian_league_terraform_candidate = {
	optimize_memory
	set_planet_flag = ignore_startup_effect
	prevent_anomaly = yes
	clear_deposits = yes
	if = {
		limit = { colonizable_planet = no }
		if = {
			limit = {
				NOR = {
					is_planet_class = pc_molten
					is_planet_class = pc_frozen
					is_planet_class = pc_toxic
				}
			}
			add_modifier = {
				modifier = terraforming_candidate
				days = -1
			}
		}
		else_if = {
			limit = {
				has_aquatics = yes
				is_planet_class = pc_frozen
			}
			add_modifier = {
				modifier = frozen_terraforming_candidate
				days = -1
			}
		}
		else_if = {
			limit = {
				has_toxoids = yes
				is_planet_class = pc_toxic
			}
			set_planet_flag = toxic_terraforming_candidate
			add_modifier = {
				modifier = toxic_terraforming_candidate
				days = -1
			}
		}
	}
}

# used for generating a 50/50 chance that a planet will have the terraforming_candidate modifier
# this = planet
generate_jovian_league_potential_terraform_candidate = {
	optimize_memory
	random_list = {
		50 = { generate_jovian_league_terraform_candidate = yes }
		50 = { }
	}
	reroll_random = yes
}

# duplicates effects from generate_home_system_resources but adds a flag to prevent deposits with gatherers (mining/research stations)
# from appearing on specific planets, generates gatherer targets before "open" deposits that need one constructed, and avoids overwriting
# deposits that it already added
# this = galactic_object (i.e. solar system)
generate_jovian_league_system_resources = {
	optimize_memory
	every_system_planet = {
		limit = {
			colonizable_planet = no
			NOT = { has_planet_flag = ignore_startup_effect }
		}
		prevent_anomaly = yes
		clear_deposits = yes
	}

	system_star = {
		set_planet_flag = starting_mining_target
		set_planet_flag = starting_deposit
		set_deposit = d_energy_5
	}

	random_system_planet = {
		limit = {
			NOR = {
				has_planet_flag = starting_deposit
				has_planet_flag = ignore_startup_effect
				has_planet_flag = starting_gatherer_prohibited
				has_deposit_for = shipclass_mining_station
				has_deposit_for = shipclass_research_station
			}
			can_have_energy_deposits = yes
		}

		set_planet_flag = starting_mining_target
		set_planet_flag = starting_deposit
		set_deposit = d_energy_5
	}

	random_system_planet = {
		limit = {
			NOR = {
				has_planet_flag = starting_deposit
				has_planet_flag = ignore_startup_effect
				has_planet_flag = starting_gatherer_prohibited
				has_deposit_for = shipclass_mining_station
				has_deposit_for = shipclass_research_station
			}
			OR = {
				can_have_physics_deposits = yes
				can_have_society_deposits = yes
				can_have_engineering_deposits = yes
				is_planet_class = pc_barren
				is_planet_class = pc_barren_cold
			}
		}

		set_planet_flag = starting_research_target
		set_planet_flag = starting_deposit

		if = {
			limit = { can_have_society_deposits = yes }
			set_deposit = d_society_3
		}
		else_if = {
			limit = {
				OR = {
					can_have_physics_deposits = yes
					is_planet_class = pc_barren # can't normally support physiscs deposits
				}
			}
			set_deposit = d_physics_3
		}
		else = {
			set_deposit = d_engineering_3
			# pc_barren_cold ends up in this condition, although it normally can't support engineering deposits
		}
	}

	while = {
		count = 2
		random_system_planet = {
			limit = {
				NOR = {
					has_planet_flag = starting_deposit
					has_planet_flag = ignore_startup_effect
					has_planet_flag = starting_gatherer_prohibited
					has_deposit_for = shipclass_mining_station
					has_deposit_for = shipclass_research_station
				}
				can_have_mineral_deposits = yes
			}

			set_planet_flag = starting_mining_target
			set_planet_flag = starting_deposit
			set_deposit = d_minerals_5
		}
	}

	random_system_planet = {
		limit = {
			NOR = {
				has_planet_flag = starting_deposit
				has_planet_flag = ignore_startup_effect
				has_deposit_for = shipclass_mining_station
				has_deposit_for = shipclass_research_station
			}
			OR = {
				can_have_minor_physics_deposits = yes
				can_have_society_deposits = yes
				can_have_minor_engineering_deposits = yes
				is_planet_class = pc_barren
				is_planet_class = pc_barren_cold
			}
		}

		set_planet_flag = starting_deposit

		if = {
			limit = { can_have_society_deposits = yes }
			set_deposit = d_society_2
		}
		else_if = {
			limit = {
				OR = {
					can_have_minor_physics_deposits = yes
					is_planet_class = pc_barren # can't normally support physiscs deposits
				}
			}
			set_deposit = d_physics_2
		}
		else = {
			set_deposit = d_engineering_2
			# pc_barren_cold ends up in this condition, although it normally can't support engineering deposits
		}
	}

	random_system_planet = {
		limit = {
			NOR = {
				has_planet_flag = starting_deposit
				has_planet_flag = ignore_startup_effect
				has_deposit_for = shipclass_mining_station
				has_deposit_for = shipclass_research_station
			}
			can_have_energy_deposits = yes
		}

		set_planet_flag = starting_deposit
		random_list = {
			50 = { set_deposit = d_energy_2 }
			50 = { set_deposit = d_energy_3 }
		}
	}

	random_system_planet = {
		limit = {
			NOR = {
				has_planet_flag = starting_deposit
				has_planet_flag = ignore_startup_effect
				has_deposit_for = shipclass_mining_station
				has_deposit_for = shipclass_research_station
			}
			can_have_mineral_deposits = yes
		}

		set_planet_flag = starting_deposit
		random_list = {
			50 = { set_deposit = d_minerals_2 }
			50 = { set_deposit = d_minerals_3 }
		}
	}
}

# duplicates special effects for Reanimators (civic_reanimated_armies) from generate_start_buildings_and_districts
# this = galactic_object (i.e. solar system)
adjust_jovian_league_system_resources_for_civics_and_origins = {
	optimize_memory
	if = {
		limit = { space_owner = { has_valid_civic = civic_reanimated_armies } }
		while = {
			count = 2
			random_system_planet = {
				limit = {
					has_deposit_for = shipclass_research_station
					NOR = {
						has_planet_flag = ignore_startup_effect
						has_deposit = d_engineering_6
					}
				}
				add_deposit = d_engineering_6
			}
		}
	}
	if = {
		limit = { space_owner = { has_origin = origin_jovian_league_toxic_knights } }
		# mimics logic in the Toxic God initializers
		random_system_planet = {
			limit = {
				has_planet_flag = starting_deposit
				OR = {
					has_deposit = d_minerals_2
					has_deposit = d_minerals_3
				}
			}
			clear_deposits = yes
			add_deposit = d_minerals_6
			add_deposit = d_alloys_3
		}
	}
	if = {
		limit = { space_owner = { has_origin = origin_jovian_league_fear_of_the_dark } }
		random_system_planet = {
			limit = { has_planet_flag = divider_flag }
			remove_terraforming_candidate_modifiers = yes
			change_pc = pc_broken
			set_name = NAME_Divider
			set_planet_flag = starting_deposit
			set_planet_flag = starting_mining_target
			add_deposit = d_alloys_5
		}
	}
}

# triggered by empire_init_capital_planet
# this = planet (capital)
generate_jovian_league_capital_start_deposits_and_blockers = {
	optimize_memory
	clear_deposits = yes

	# based on starting blockers from common/scripted_effects/01_start_of_game_effects.txt - generate_start_deposits_and_blockers
	if = {
		limit = { owner = { has_valid_civic = civic_machine_terminator } }
		add_deposit = d_exterminators_ruins
		add_deposit = d_former_battlefield
	}
	else_if = {
		limit = { owner = { has_valid_civic = civic_machine_servitor } }
		add_deposit = d_strip_mine
		add_deposit = d_unsupervised_settlement
		add_deposit = d_mothballed_sanctuary_factories
	}
	else_if = {
		limit = { owner = { has_valid_civic = civic_machine_assimilator } }
		add_deposit = d_strip_mine
		add_deposit = d_assimilators_ruins
	}
	else_if = {
		limit = { owner = { is_machine_empire = yes } }
		add_deposit = d_strip_mine
		add_deposit = d_machine_empire_ruins
	}
	else_if = {
		limit = { owner = { is_hive_empire = yes } }
		add_deposit = d_collapsed_burrows
		add_deposit = d_failing_infrastructure
	}
	else = {
		add_deposit = d_decrepit_dwellings
		add_deposit = d_failing_infrastructure
	}

	if = {
		limit = { owner = { is_lithoid_empire = yes } }
		if = {
			limit = { owner = { has_valid_civic = civic_hive_devouring_swarm } }
			while = {
				count = 2
				add_deposit = d_hibernating_lithoids
			}
		}
		else_if = {
			limit = { owner = { NOT = { has_origin = origin_broken_shackles } } }
			while = {
				count = 4
				add_deposit = d_hibernating_lithoids
			}
		}
	}

	if = {
		limit = {
			OR = {
				is_planet_class = pc_arid
				is_pd_arid = yes
			}
		}
		# 1 + 2 (3) energy
		add_deposit = d_arid_highlands
		add_deposit = d_searing_desert

		# 1 + 2 (3) mining
		add_deposit = d_veiny_cliffs
		add_deposit = d_ore_rich_caverns

		# 1 + 3 (4) farming (lithoids swap 3 minerals)
		add_deposit = d_bountiful_plains
		if = {
			limit = { owner = { is_lithoid_empire = yes } }
			add_deposit = d_rich_mountain
		}
		else = {
			add_deposit = d_tropical_island
		}
	}
	else_if = {
		limit = {
			OR = {
				is_planet_class = pc_desert
				is_pd_desert = yes
			}
		}
		# 1 + 2 (3) energy
		add_deposit = d_arid_highlands
		add_deposit = d_searing_desert

		# 1 + 2 (3) mining
		add_deposit = d_mineral_fields
		add_deposit = d_ore_rich_caverns

		# 1 + 3 (4) farming (lithoids swap 3 minerals)
		add_deposit = d_nutritious_mudland
		if = {
			limit = { owner = { is_lithoid_empire = yes } }
			add_deposit = d_rich_mountain
		}
		else = {
			add_deposit = d_marvelous_oasis
		}

		set_planet_flag = tasty_desert
	}
	else_if = {
		limit = {
			OR = {
				is_planet_class = pc_savannah
				is_pd_savannah = yes
			}
		}
		# 1 + 2 (3) energy
		add_deposit = d_arid_highlands
		add_deposit = d_searing_desert

		# 1 + 2 (3) mining
		add_deposit = d_mineral_fields
		add_deposit = d_prosperous_mesa

		# 1 + 3 (4) farming (lithoids swap 3 minerals)
		add_deposit = d_bountiful_plains
		if = {
			limit = { owner = { is_lithoid_empire = yes } }
			add_deposit = d_rich_mountain
		}
		else = {
			add_deposit = d_black_soil
		}
	}
	else_if = {
		limit = {
			OR = {
				is_planet_class = pc_continental
				is_pd_continental = yes
			}
		}
		# 1 + 2 (3) energy
		add_deposit = d_hot_springs
		add_deposit = d_rushing_waterfalls

		# 1 + 2 (3) mining
		add_deposit = d_veiny_cliffs
		add_deposit = d_prosperous_mesa

		# 1 + 3 (4) farming (lithoids swap 3 minerals)
		add_deposit = d_rugged_woods
		if = {
			limit = { owner = { is_lithoid_empire = yes } }
			add_deposit = d_rich_mountain
		}
		else = {
			add_deposit = d_black_soil
		}
	}
	else_if = {
		limit = {
			OR = {
				is_planet_class = pc_ocean
				is_pd_ocean = yes
			}
		}
		# 1 + 2 (3) energy
		add_deposit = d_hot_springs
		add_deposit = d_rushing_waterfalls

		# 1 + 2 (3) mining
		add_deposit = d_mineral_fields
		add_deposit = d_ore_rich_caverns

		# 1 + 3 (4) farming (lithoids swap 3 minerals)
		add_deposit = d_green_hills
		if = {
			limit = { owner = { is_lithoid_empire = yes } }
			add_deposit = d_submerged_ore_veins
		}
		else = {
			add_deposit = d_teeming_reef
		}
	}
	else_if = {
		limit = {
			OR = {
				is_planet_class = pc_tropical
				is_pd_tropical = yes
			}
		}
		# 1 + 2 (3) energy
		add_deposit = d_hot_springs
		add_deposit = d_rushing_waterfalls

		# 1 + 2 (3) mining
		add_deposit = d_mineral_fields
		add_deposit = d_prosperous_mesa

		# 1 + 3 (4) farming (lithoids swap 3 minerals)
		add_deposit = d_green_hills
		if = {
			limit = { owner = { is_lithoid_empire = yes } }
			add_deposit = d_submerged_ore_veins
		}
		else = {
			add_deposit = d_tropical_island
		}
	}
	else_if = {
		limit = {
			OR = {
				is_planet_class = pc_alpine
				is_pd_alpine = yes
			}
		}
		# 1 + 2 (3) energy
		add_deposit = d_hot_springs
		add_deposit = d_frozen_gas_lake

		# 1 + 2 (3) mining
		add_deposit = d_veiny_cliffs
		add_deposit = d_ore_rich_caverns

		# 1 + 3 (4) farming (lithoids swap 3 minerals)
		add_deposit = d_forgiving_tundra
		if = {
			limit = { owner = { is_lithoid_empire = yes } }
			add_deposit = d_rich_mountain
		}
		else = {
			add_deposit = d_fungal_forest
		}
	}
	else_if = {
		limit = {
			OR = {
				is_planet_class = pc_arctic
				is_pd_arctic = yes
			}
		}
		# 1 + 2 (3) energy
		add_deposit = d_hot_springs
		add_deposit = d_frozen_gas_lake

		# 1 + 2 (3) mining
		add_deposit = d_veiny_cliffs
		add_deposit = d_ore_rich_caverns

		# 1 + 3 (4) farming (lithoids swap 3 minerals)
		add_deposit = d_lichen_fields
		if = {
			limit = { owner = { is_lithoid_empire = yes } }
			add_deposit = d_rich_mountain
		}
		else = {
			add_deposit = d_fungal_forest
		}
	}
	else_if = {
		limit = {
			OR = {
				is_planet_class = pc_tundra
				is_pd_tundra = yes
			}
		}
		# 1 + 2 (3) energy
		add_deposit = d_hot_springs
		add_deposit = d_frozen_gas_lake

		# 1 + 2 (3) mining
		add_deposit = d_mineral_fields
		add_deposit = d_ore_rich_caverns

		# 1 + 3 (4) farming (lithoids swap 3 minerals)
		add_deposit = d_forgiving_tundra
		if = {
			limit = { owner = { is_lithoid_empire = yes } }
			add_deposit = d_rich_mountain
		}
		else = {
			add_deposit = d_fungal_forest
		}
	}
	else_if = {
		limit = {
			OR = {
				is_planet_class = pc_nuked
				is_pd_nuked = yes
			}
		}
		# 1 + 2 (3) energy
		add_deposit = d_hot_springs
		add_deposit = d_searing_desert

		# 1 + 2 (3) mining
		add_deposit = d_veiny_cliffs
		add_deposit = d_ore_rich_caverns

		# 1 + 3 (4) farming (lithoids swap 3 minerals)
		add_deposit = d_lichen_fields
		if = {
			limit = { owner = { is_lithoid_empire = yes } }
			add_deposit = d_submerged_ore_veins
		}
		else = {
			add_deposit = d_fungal_forest
		}
	}
	else = {
		log_error = "unable to initialize planet-class-specific deposits on [This.GetName] for [This.Owner.GetRealName]: not one of the 9 default classes or pc_nuked"
	}

	if = {
		limit = { owner = { has_origin = origin_jovian_league_toxic_knights } }
		add_deposit = d_toxic_god_blight_upon_the_land
		add_deposit = d_toxic_god_deitys_swarms
		add_deposit = d_toxic_god_pools_most_venemous
		add_deposit = d_toxic_god_pestilential_wasteland
		add_deposit = d_toxic_god_envenomed_seas
		add_deposit = d_toxic_gods_blessing
	}
}

# triggered by empire_init_capital_planet
# this = planet (capital)
generate_jovian_league_capital_start_buildings_and_districts = {
	optimize_memory
	if = {
		limit = { owner = { NOT = { has_valid_civic = civic_agrarian_idyll } } }
		ojl_add_authority_appropriate_housing_district = yes
	}
	else = {
		ojl_add_planet_appropriate_farming_district = yes
	}
	if = {
		limit = { owner = { is_hive_empire = yes } }
		add_building = building_hive_capital
		if = {
			limit = {
				owner = {
					NAND = {
						has_origin = origin_jovian_league_necrophage
						has_valid_civic = civic_hive_devouring_swarm
					}
				}
			}
			add_building = building_spawning_pool
		}
	}
	else_if = {
		limit = { owner = { is_machine_empire = yes } }
		add_building = building_machine_capital
		add_building = building_machine_assembly_plant
		if = {
			limit = { owner = { has_valid_civic = civic_machine_servitor } }
			add_building = building_organic_sanctuary
		}
	}
	else = {
		add_building = building_capital
		if = {
			limit = { owner = { has_origin = origin_jovian_league_mechanists } }
			add_building = building_robot_assembly_plant
		}
		if = {
			limit = { owner = { has_valid_civic = civic_permanent_employment } }
			add_building = building_posthumous_employment_center
		}
	}

	while = {
		limit = { free_building_slots < 1 }
		ojl_add_authority_appropriate_housing_district = yes
	}

	if = {
		limit = {
			owner = {
				is_machine_empire = yes
				NOR = {
					has_valid_civic = civic_machine_assimilator
					has_valid_civic = civic_machine_servitor
				}
			}
		}
		ojl_add_planet_appropriate_commercial_or_generator_district = yes
	}
	else_if = {
		limit = { owner = { has_country_flag = non_lithoid_subspecies } }
		ojl_add_planet_appropriate_farming_district = yes
	}
	else = {
		ojl_add_species_appropriate_food_district = yes
	}

	add_district = district_industrial
	if = {
		limit = { owner = { is_eager_explorer_empire = no } }
		if = {
			limit = {
				owner = {
					is_anglers_empire = yes
					is_catalytic_empire = yes
				}
			}
			ojl_add_planet_appropriate_mining_district = yes
		}
		else_if = {
			limit = {
				owner = {
					is_hive_empire = yes
					is_eager_explorer_empire = yes
				}
			}
			ojl_add_species_appropriate_food_district = yes
		}
		else = {
			add_district = district_industrial
		}
	}
	if = {
		limit = { owner = { has_origin = origin_jovian_league } }
		if = {
			limit = {
				owner = {
					is_hive_empire = yes
					is_eager_explorer_empire = yes
				}
			}
			ojl_add_species_appropriate_food_district = yes
		}
		if = {
			limit = {
				owner = {
					OR = {
						is_machine_empire = yes
						AND = {
							is_hive_empire = yes
							is_eager_explorer_empire = no
						}
					}
				}
			}
			ojl_add_planet_appropriate_commercial_or_generator_district = yes
		}
		else = {
			add_district = district_industrial
		}
	}

	if = {
		limit = { owner = { is_eager_explorer_empire = no } }
		if = {
			limit = { owner = { has_valid_civic = civic_reanimated_armies } }
			add_building = building_dread_encampment
		}
		else = {
			add_building = building_research_lab_1
		}
	}

	if = {
		limit = {
			owner = {
				has_origin = origin_jovian_league_necrophage
				is_homicidal = no
			}
		}
		add_building = building_necrophage_elevation_chamber
	}

	if = {
		limit = { free_building_slots > 0 }
		if = {
			limit = { owner = { is_memorialist_empire = yes } }
			add_building = building_galactic_memorial_1
		}
		if = {
			limit = { owner = { has_valid_civic = civic_environmentalist } }
			add_building = building_ranger_lodge
			add_blocker = { type = d_big_nature_preserve_blocker }
		}
		if = {
			limit = {
				owner = {
					is_idyllic_bloom_empire = yes
					NOT = { has_origin = origin_life_seeded }
				}
			}
			add_building = building_gaiaseeders_1
		}
		if = {
			limit = { owner = { is_relentless_industrialist_empire = yes } }
			add_building = building_coordinated_fulfillment_center_1
		}
	}
}

# triggered by empire_init_capital_planet
# this = planet (capital)
generate_jovian_league_capital_start_pops = {
	optimize_memory
	set_variable = {
		which = total_pop_count
		value = 12
	}

	if = {
		limit = { owner = { is_eager_explorer_empire = yes } }
		change_variable = {
			which = total_pop_count
			value = -4
		}
	}

	if = {
		limit = { owner = { has_origin = origin_jovian_league_toxic_knights } }
		change_variable = {
			which = total_pop_count
			value = -2
		}
		if = {
			limit = { owner = { is_eager_explorer_empire = yes } }
			change_variable = {
				which = total_pop_count
				value = -1
			}
		}
	}

	if = {
		limit = {
			owner = {
				OR = {
					has_origin = origin_jovian_league_syncretic
					has_origin = origin_jovian_league_necrophage
				}
			}
		}
		set_variable = {
			which = secondary_pop_count
			value = 5
		}
		if = {
			limit = { owner = { has_origin = origin_jovian_league_necrophage } }
			if = {
				limit = {
					owner = {
						OR = {
							is_homicidal = yes
							is_hive_empire = yes
						}
					}
				}
				change_variable = {
					which = secondary_pop_count
					value = -2
				}
			}
		}
	}
	else_if = {
		limit = { owner = { has_valid_civic = civic_machine_assimilator } }
		set_variable = {
			which = secondary_pop_count
			value = 4
		}
	}
	else_if = {
		limit = {
			owner = {
				OR = {
					has_origin = origin_jovian_league_mechanists
					has_valid_civic = civic_machine_servitor
				}
			}
		}
		set_variable = {
			which = secondary_pop_count
			value = 3
		}
	}

	if = {
		limit = { is_variable_set = secondary_pop_count }
		while = {
			count = secondary_pop_count
			create_pop = {
				species = event_target:jovian_league_secondary_species
				ethos = random
				effect = {
					if = {
						limit = { owner = { is_machine_empire = yes } }
						clear_ethos = yes
					}
				}
			}
		}
		clear_variable = secondary_pop_count
	}

	if = {
		limit = { owner = { has_valid_civic = civic_machine_servitor } }
		change_variable = {
			which = total_pop_count
			value = 2
		}
	}
	else_if = {
		limit = {
			owner = {
				has_origin = origin_jovian_league_necrophage
				is_homicidal = yes
			}
		}
		change_variable = {
			which = total_pop_count
			value = 1
		}
	}

	if = {
		limit = { owner = { has_origin = origin_jovian_league } }
		change_variable = {
			which = total_pop_count
			value = 1
		}
		if = {
			limit = { owner = { is_eager_explorer_empire = yes } }
			change_variable = {
				which = total_pop_count
				value = 1
			}
		}
	}

	while = {
		limit = { num_pops < total_pop_count }
		create_pop = {
			species = owner_species
			ethos = random
			effect = {
				if = {
					limit = { owner = { is_gestalt = yes } }
					clear_ethos = yes
				}
			}
		}
	}

	clear_variable = total_pop_count
	ojl_setup_civic_permanent_employment_zombie_pops = { COUNT = 1 }
	ojl_setup_origin_mechanists_robot_pops = yes
}

# triggered by empire_init_capital_planet
# this = planet (capital)
generate_jovian_league_capital_final_pass = {
	if = {
		limit = { owner = { has_origin = origin_jovian_league } }
		if = {
			limit = { owner = { is_gestalt = no } }
			add_modifier = {
				modifier = prosp_uni_mod
				days = 7200
			}
		}
		else = {
			add_modifier = {
				modifier = prosp_uni_mod_gestalt
				days = 7200
			}
		}
	}
	else_if = {
		limit = { owner = { has_origin = origin_jovian_league_lost_colony } }
		add_modifier = { modifier = colonial_spirit_mod }
	}
	if = {
		limit = { owner = { any_owned_pop_species = { has_trait = trait_exotic_metabolism } } }
		add_deposit = d_exotic_mountain
	}
}

# triggered by empire_init_capital_planet
# this = planet (second orbit)
generate_jovian_league_sibling1_start_deposits_and_blockers = {
	optimize_memory
	clear_deposits = yes

	if = {
		limit = { owner = { is_hive_empire = yes } }
		if = {
			limit = { owner = { has_origin = origin_jovian_league_necrophage } }
			add_deposit = d_malformed_synapse_nodes
		}
	}
	else_if = {
		limit = { owner = { has_valid_civic = civic_machine_servitor } }
		add_deposit = d_mothballed_sanctuary_factories
	}

	if = {
		limit = {
			OR = {
				is_planet_class = pc_arid
				is_pd_arid = yes
			}
		}
		# 1 + 2 (3) energy
		add_deposit = d_arid_highlands
		add_deposit = d_searing_desert

		# 2 + 3 (5) mining
		add_deposit = d_ore_rich_caverns
		add_deposit = d_rich_mountain

		# 1 + 2 (3) farming
		add_deposit = d_bountiful_plains
		add_deposit = d_great_river
	}
	else_if = {
		limit = {
			OR = {
				is_planet_class = pc_desert
				is_pd_desert = yes
			}
		}
		# 1 + 2 (3) energy
		add_deposit = d_arid_highlands
		add_deposit = d_searing_desert

		# 2 + 3 (5) mining
		add_deposit = d_ore_rich_caverns
		add_deposit = d_rich_mountain

		# 1 + 2 (3) farming
		add_deposit = d_nutritious_mudland
		add_deposit = d_great_river

		set_planet_flag = tasty_desert
	}
	else_if = {
		limit = {
			OR = {
				is_planet_class = pc_savannah
				is_pd_savannah = yes
			}
		}
		# 1 + 2 (3) energy
		add_deposit = d_arid_highlands
		add_deposit = d_searing_desert

		# 2 + 3 (5) mining
		add_deposit = d_prosperous_mesa
		add_deposit = d_submerged_ore_veins

		# 1 + 2 (3) farming
		add_deposit = d_bountiful_plains
		add_deposit = d_fertile_lands
	}
	else_if = {
		limit = {
			OR = {
				is_planet_class = pc_continental
				is_pd_continental = yes
			}
		}
		# 1 + 2 (3) energy
		add_deposit = d_hot_springs
		add_deposit = d_rushing_waterfalls

		# 2 + 3 (5) mining
		add_deposit = d_prosperous_mesa
		add_deposit = d_rich_mountain

		# 1 + 2 (3) farming
		add_deposit = d_rugged_woods
		add_deposit = d_fertile_lands
	}
	else_if = {
		limit = {
			OR = {
				is_planet_class = pc_ocean
				is_pd_ocean = yes
			}
		}
		# 1 + 2 (3) energy
		add_deposit = d_hot_springs
		add_deposit = d_rushing_waterfalls

		# 2 + 3 (5) mining
		add_deposit = d_ore_rich_caverns
		add_deposit = d_submerged_ore_veins

		# 1 + 2 (3) farming
		add_deposit = d_green_hills
		add_deposit = d_lush_jungle
	}
	else_if = {
		limit = {
			OR = {
				is_planet_class = pc_tropical
				is_pd_tropical = yes
			}
		}
		# 1 + 2 (3) energy
		add_deposit = d_hot_springs
		add_deposit = d_rushing_waterfalls

		# 2 + 3 (5) mining
		add_deposit = d_prosperous_mesa
		add_deposit = d_submerged_ore_veins

		# 1 + 2 (3) farming
		add_deposit = d_green_hills
		add_deposit = d_lush_jungle
	}
	else_if = {
		limit = {
			OR = {
				is_planet_class = pc_alpine
				is_pd_alpine = yes
			}
		}
		# 1 + 2 (3) energy
		add_deposit = d_hot_springs
		add_deposit = d_frozen_gas_lake

		# 2 + 3 (5) mining
		add_deposit = d_ore_rich_caverns
		add_deposit = d_rich_mountain

		# 1 + 2 (3) farming
		add_deposit = d_forgiving_tundra
		add_deposit = d_fungal_caves
	}
	else_if = {
		limit = {
			OR = {
				is_planet_class = pc_arctic
				is_pd_arctic = yes
			}
		}
		# 1 + 2 (3) energy
		add_deposit = d_hot_springs
		add_deposit = d_frozen_gas_lake

		# 2 + 3 (5) mining
		add_deposit = d_ore_rich_caverns
		add_deposit = d_rich_mountain

		# 1 + 2 (3) farming
		add_deposit = d_lichen_fields
		add_deposit = d_fungal_caves
	}
	else_if = {
		limit = {
			OR = {
				is_planet_class = pc_tundra
				is_pd_tundra = yes
			}
		}
		# 1 + 2 (3) energy
		add_deposit = d_hot_springs
		add_deposit = d_frozen_gas_lake

		# 2 + 3 (5) mining
		add_deposit = d_ore_rich_caverns
		add_deposit = d_rich_mountain

		# 1 + 2 (3) farming
		add_deposit = d_forgiving_tundra
		add_deposit = d_fungal_caves
	}
	else_if = {
		limit = {
			OR = {
				is_planet_class = pc_nuked
				is_pd_nuked = yes
			}
		}
		# 1 + 2 (3) energy
		add_deposit = d_hot_springs
		add_deposit = d_searing_desert

		# 2 + 3 (5) mining
		add_deposit = d_ore_rich_caverns
		add_deposit = d_submerged_ore_veins

		# 1 + 2 (3) farming
		add_deposit = d_lichen_fields
		add_deposit = d_fungal_caves
	}
	else = {
		log_error = "unable to initialize planet-class-specific deposits on [This.GetName] for [This.Owner.GetRealName]: not one of the 9 default classes or pc_nuked"
	}
}

# triggered by empire_init_capital_planet
# this = planet (second orbit)
generate_jovian_league_sibling1_start_buildings_and_districts = {
	optimize_memory
	if = {
		limit = { owner = { NOT = { has_origin = origin_jovian_league_toxic_knights } } }
		if = {
			limit = { owner = { NOT = { has_valid_civic = civic_agrarian_idyll } } }
			ojl_add_authority_appropriate_housing_district = yes
		}
		else = {
			ojl_add_planet_appropriate_farming_district = yes
		}
	}
	if = {
		limit = { owner = { is_hive_empire = yes } }
		add_building = building_hive_capital
		if = {
			limit = {
				owner = {
					NAND = {
						has_origin = origin_jovian_league_necrophage
						has_valid_civic = civic_hive_devouring_swarm
					}
				}
			}
			add_building = building_spawning_pool
		}
	}
	else_if = {
		limit = { owner = { is_machine_empire = yes } }
		add_building = building_machine_capital
		add_building = building_machine_assembly_plant
		add_building = building_uplink_node
		if = {
			limit = { owner = { has_valid_civic = civic_machine_servitor } }
			add_building = building_organic_sanctuary
		}
	}
	else = {
		if = {
			limit = {
				owner = {
					NAND = {
						has_origin = origin_jovian_league_toxic_knights
						is_eager_explorer_empire = yes
					}
				}
			}
			add_building = building_capital
		}
		else = {
			add_building = building_colony_shelter
		}
		if = {
			limit = { owner = { has_origin = origin_jovian_league_mechanists } }
			add_building = building_robot_assembly_plant
		}
		if = {
			limit = { owner = { has_valid_civic = civic_permanent_employment } }
			add_building = building_posthumous_employment_center
		}
		if = {
			limit = { owner = { NOT = { has_origin = origin_jovian_league_toxic_knights } } }
			if = {
				limit = { owner = { is_spiritualist = yes } }
				if = {
					limit = { owner = { is_death_cult_empire = yes } }
					add_building = building_sacrificial_temple_1
				}
				else = {
					add_building = building_temple
				}
			}
			else_if = {
				limit = { owner = { is_pleasure_seeker = yes } }
				add_building = building_holo_theatres
			}
			else_if = {
					limit = { owner = { has_valid_civic = civic_environmentalist } }
					add_building = building_ranger_lodge
					add_blocker = { type = d_big_nature_preserve_blocker }
				}
			else = {
				add_building = building_commercial_zone # need amentities more than unity
			}
			# no industry for a fulfillment center, gaia-seeder too expensive
		}
	}

	set_variable = {
		which = num_rural_districts
		value = 2
	}
	if = {
		limit = { owner = { is_eager_explorer_empire = yes } }
		change_variable = {
			which = num_rural_districts
			value = -1
		}
	}
	if = {
		limit = { owner = { has_origin = origin_jovian_league } }
		change_variable = {
			which = num_rural_districts
			value = 1
		}
	}
	if = {
		limit = { owner = { is_catalytic_empire = yes } }
		while = {
			count = num_rural_districts
			ojl_add_planet_appropriate_farming_district = yes
		}
	}
	else = {
		while = {
			count = num_rural_districts
			ojl_add_planet_appropriate_mining_district = yes
		}
	}

	clear_variable = num_rural_districts
	if = {
		limit = {
			owner = {
				has_origin = origin_jovian_league_necrophage
				is_homicidal = no
			}
		}
		add_building = building_necrophage_elevation_chamber
	}

	if = {
		limit = { owner = { is_catalytic_empire = yes } }
		set_colony_type = col_farming
	}
	else = {
		set_colony_type = col_mining
	}
}

# triggered by empire_init_capital_planet
# this = planet (second orbit)
generate_jovian_league_sibling1_start_pops = {
	optimize_memory
	set_variable = {
		which = total_pop_count
		value = 10
	}

	if = {
		limit = { owner = { is_eager_explorer_empire = yes } }
		change_variable = {
			which = total_pop_count
			value = -3
		}
	}

	if = {
		limit = { owner = { has_origin = origin_jovian_league_toxic_knights } }
		change_variable = {
			which = total_pop_count
			value = -3
		}
		if = {
			limit = { owner = { is_eager_explorer_empire = yes } }
			change_variable = {
				which = total_pop_count
				value = -1
			}
		}
	}

	if = {
		limit = {
			owner = {
				OR = {
					has_origin = origin_jovian_league_syncretic
					has_origin = origin_jovian_league_necrophage
				}
			}
		}
		set_variable = {
			which = secondary_pop_count
			value = 5
		}
		if = {
			limit = { owner = { has_origin = origin_jovian_league_necrophage } }
			if = {
				limit = {
					OR = {
						owner = {
							is_homicidal = yes
							is_hive_empire = yes
						}
					}
				}
				change_variable = {
					which = secondary_pop_count
					value = -3
				}
			}
		}
	}
	else_if = {
		limit = { owner = { has_valid_civic = civic_machine_servitor } }
		set_variable = {
			which = secondary_pop_count
			value = 2
		}
	}
	else_if = {
		limit = {
			owner = {
				OR = {
					has_origin = origin_jovian_league_mechanists
					has_valid_civic = civic_machine_assimilator
				}
			}
		}
		set_variable = {
			which = secondary_pop_count
			value = 3
		}
	}

	if = {
		limit = { is_variable_set = secondary_pop_count }
		while = {
			count = secondary_pop_count
			create_pop = {
				species = event_target:jovian_league_secondary_species
				ethos = random
				effect = {
					if = {
						limit = { owner = { is_machine_empire = yes } }
						clear_ethos = yes
					}
				}
			}
		}
		clear_variable = secondary_pop_count
	}

	if = {
		limit = { owner = { is_hive_empire = yes } }
		change_variable = {
			which = total_pop_count
			value = 2
		}
	}
	else_if = {
		limit = { owner = { has_valid_civic = civic_machine_servitor } }
		change_variable = {
			which = total_pop_count
			value = 1
		}
	}

	if = {
		limit = {
			owner = {
				has_origin = origin_jovian_league_necrophage
				is_homicidal = yes
			}
		}
		change_variable = {
			which = total_pop_count
			value = 1
		}
	}

	if = {
		limit = { owner = { has_origin = origin_jovian_league } }
		change_variable = {
			which = total_pop_count
			value = 1
		}
	}

	while = {
		limit = { num_pops < total_pop_count }
		create_pop = {
			species = owner_species
			ethos = random
			effect = {
				if = {
					limit = { owner = { is_gestalt = yes } }
					clear_ethos = yes
				}
			}
		}
	}

	clear_variable = total_pop_count
	if = {
		limit = {
			owner = {
				has_origin = origin_jovian_league
				is_eager_explorer_empire = no
			}
		}
		ojl_setup_civic_permanent_employment_zombie_pops = { COUNT = 1 }
	}
	else = {
		ojl_setup_civic_permanent_employment_zombie_pops = { COUNT = 2 }
	}

	ojl_setup_origin_mechanists_robot_pops = yes
}

# triggered by empire_init_capital_planet
# this = planet (second/third/fourth orbit)
generate_jovian_league_sibling_final_pass = {
	if = {
		limit = { owner = { has_origin = origin_jovian_league } }
		if = {
			limit = { owner = { is_gestalt = no } }
			add_modifier = {
				modifier = prosp_uni_mod
				days = 7200
			}
		}
		else = {
			add_modifier = {
				modifier = prosp_uni_mod_gestalt
				days = 7200
			}
		}
	}
}

# triggered by empire_init_capital_planet
# this = planet (third orbit)
generate_jovian_league_sibling2_start_deposits_and_blockers = {
	optimize_memory
	clear_deposits = yes

	if = {
		limit = { owner = { is_hive_empire = yes } }
		add_deposit = d_malformed_synapse_nodes
		add_deposit = d_collapsed_sentinel_posts
	}
	else_if = {
		limit = { owner = { is_machine_empire = yes } }
		add_deposit = d_obsolete_sentinel_posts
	}

	if = {
		limit = {
			OR = {
				is_planet_class = pc_arid
				is_pd_arid = yes
			}
		}
		# 2 + 3 (5) energy
		add_deposit = d_searing_desert
		add_deposit = d_geothermal_vent

		# 1 + 2 (3) mining
		add_deposit = d_veiny_cliffs
		add_deposit = d_ore_rich_caverns

		# 1 + 2 (3) farming
		add_deposit = d_bountiful_plains
		add_deposit = d_great_river
	}
	else_if = {
		limit = {
			OR = {
				is_planet_class = pc_desert
				is_pd_desert = yes
			}
		}
		# 2 + 3 (5) energy
		add_deposit = d_searing_desert
		add_deposit = d_geothermal_vent

		# 1 + 2 (3) mining
		add_deposit = d_mineral_fields
		add_deposit = d_ore_rich_caverns

		# 1 + 2 (3) farming
		add_deposit = d_nutritious_mudland
		add_deposit = d_great_river

		set_planet_flag = tasty_desert
	}
	else_if = {
		limit = {
			OR = {
				is_planet_class = pc_savannah
				is_pd_savannah = yes
			}
		}
		# 2 + 3 (5) energy
		add_deposit = d_searing_desert
		add_deposit = d_geothermal_vent

		# 1 + 2 (3) mining
		add_deposit = d_mineral_fields
		add_deposit = d_prosperous_mesa

		# 1 + 2 (3) farming
		add_deposit = d_bountiful_plains
		add_deposit = d_fertile_lands
	}
	else_if = {
		limit = {
			OR = {
				is_planet_class = pc_continental
				is_pd_continental = yes
			}
		}
		# 2 + 3 (5) energy
		add_deposit = d_rushing_waterfalls
		add_deposit = d_tempestous_mountain

		# 1 + 2 (3) mining
		add_deposit = d_veiny_cliffs
		add_deposit = d_prosperous_mesa

		# 1 + 2 (3) farming
		add_deposit = d_rugged_woods
		add_deposit = d_fertile_lands
	}
	else_if = {
		limit = {
			OR = {
				is_planet_class = pc_ocean
				is_pd_ocean = yes
			}
		}
		# 2 + 3 (5) energy
		add_deposit = d_rushing_waterfalls
		add_deposit = d_underwater_vent

		# 1 + 2 (3) mining
		add_deposit = d_mineral_fields
		add_deposit = d_ore_rich_caverns

		# 1 + 2 (3) farming
		add_deposit = d_green_hills
		add_deposit = d_lush_jungle
	}
	else_if = {
		limit = {
			OR = {
				is_planet_class = pc_tropical
				is_pd_tropical = yes
			}
		}
		# 2 + 3 (5) energy
		add_deposit = d_rushing_waterfalls
		add_deposit = d_tempestous_mountain

		# 1 + 2 (3) mining
		add_deposit = d_mineral_fields
		add_deposit = d_prosperous_mesa

		# 1 + 2 (3) farming
		add_deposit = d_green_hills
		add_deposit = d_lush_jungle
	}
	else_if = {
		limit = {
			OR = {
				is_planet_class = pc_alpine
				is_pd_alpine = yes
			}
		}
		# 2 + 3 (5) energy
		add_deposit = d_frozen_gas_lake
		add_deposit = d_tempestous_mountain

		# 1 + 2 (3) mining
		add_deposit = d_veiny_cliffs
		add_deposit = d_ore_rich_caverns

		# 1 + 2 (3) farming
		add_deposit = d_forgiving_tundra
		add_deposit = d_fungal_caves
	}
	else_if = {
		limit = {
			OR = {
				is_planet_class = pc_arctic
				is_pd_arctic = yes
			}
		}
		# 2 + 3 (5) energy
		add_deposit = d_frozen_gas_lake
		add_deposit = d_geothermal_vent

		# 1 + 2 (3) mining
		add_deposit = d_veiny_cliffs
		add_deposit = d_ore_rich_caverns

		# 1 + 2 (3) farming
		add_deposit = d_lichen_fields
		add_deposit = d_fungal_caves
	}
	else_if = {
		limit = {
			OR = {
				is_planet_class = pc_tundra
				is_pd_tundra = yes
			}
		}
		# 2 + 3 (5) energy
		add_deposit = d_frozen_gas_lake
		add_deposit = d_geothermal_vent

		# 1 + 2 (3) mining
		add_deposit = d_mineral_fields
		add_deposit = d_ore_rich_caverns

		# 1 + 2 (3) farming
		add_deposit = d_forgiving_tundra
		add_deposit = d_fungal_caves
	}
	else_if = {
		limit = {
			OR = {
				is_planet_class = pc_nuked
				is_pd_nuked = yes
			}
		}
		# 2 + 3 (5) energy
		add_deposit = d_searing_desert
		add_deposit = d_underwater_vent

		# 1 + 2 (3) mining
		add_deposit = d_veiny_cliffs
		add_deposit = d_ore_rich_caverns

		# 1 + 2 (3) farming
		add_deposit = d_lichen_fields
		add_deposit = d_fungal_caves
	}
	else = {
		log_error = "unable to initialize planet-class-specific deposits on [This.GetName] for [This.Owner.GetRealName]: not one of the 9 default classes or pc_nuked"
	}
}

# triggered by empire_init_capital_planet
# this = planet (third orbit)
generate_jovian_league_sibling2_start_buildings_and_districts = {
	optimize_memory
	# Pop assembly buildings too expensive on this small colony
	if = {
		limit = { owner = { is_hive_empire = yes } }
		add_building = building_hive_capital
	}
	else_if = {
		limit = { owner = { is_machine_empire = yes } }
		add_building = building_deployment_post
	}
	else = {
		add_building = building_colony_shelter
	}

	if = {
		limit = { owner = { has_origin = origin_jovian_league } }
		ojl_add_planet_appropriate_commercial_or_generator_district = yes
	}
}

# triggered by empire_init_capital_planet
# this = planet (third orbit)
generate_jovian_league_sibling2_start_pops = {
	optimize_memory
	set_variable = {
		which = total_pop_count
		value = 2
	}

	if = {
		limit = { owner = { has_valid_civic = civic_machine_assimilator } }
		set_variable = {
			which = secondary_pop_count
			value = 1
		}
	}

	if = {
		limit = { is_variable_set = secondary_pop_count }
		while = {
			count = secondary_pop_count
			create_pop = {
				species = event_target:jovian_league_secondary_species
				ethos = random
				effect = {
					if = {
						limit = { owner = { is_machine_empire = yes } }
						clear_ethos = yes
					}
				}
			}
		}
		clear_variable = secondary_pop_count
	}
	if = {
		limit = {
			owner = {
				OR = {
					is_hive_empire = yes
					has_valid_civic = civic_machine_servitor
				}
			}
		}
		change_variable = {
			which = total_pop_count
			value = 1
		}
	}

	if = {
		limit = { owner = { has_origin = origin_jovian_league } }
		change_variable = {
			which = total_pop_count
			value = 1
		}
	}

	while = {
		limit = { num_pops < total_pop_count }
		create_pop = {
			species = owner_species
			ethos = random
			effect = {
				if = {
					limit = { owner = { is_gestalt = yes } }
					clear_ethos = yes
				}
			}
		}
	}

	clear_variable = total_pop_count

	if = {
		limit = { owner = { has_origin = origin_jovian_league } }
		ojl_setup_civic_permanent_employment_zombie_pops = { COUNT = 1 }
	}

	ojl_setup_origin_mechanists_robot_pops = yes
}

# triggered by empire_init_capital_planet
# this = planet (fourth orbit)
generate_jovian_league_sibling3_start_deposits_and_blockers = {
	optimize_memory
	clear_deposits = yes

	if = {
		limit = { owner = { is_hive_empire = yes } }
		add_deposit = d_malformed_synapse_nodes
		add_deposit = d_collapsed_sentinel_posts
	}
	else_if = {
		limit = { owner = { is_machine_empire = yes } }
		add_deposit = d_obsolete_sentinel_posts
	}

	if = {
		limit = {
			OR = {
				is_planet_class = pc_arid
				is_pd_arid = yes
			}
		}
		# 2 + 3 (5) energy
		add_deposit = d_searing_desert
		add_deposit = d_geothermal_vent

		# 1 + 2 (3) mining
		add_deposit = d_veiny_cliffs
		add_deposit = d_ore_rich_caverns

		# 3 + 2 (5) farming
		add_deposit = d_tropical_island
		add_deposit = d_great_river
	}
	else_if = {
		limit = {
			OR = {
				is_planet_class = pc_desert
				is_pd_desert = yes
			}
		}
		# 2 + 3 (5) energy
		add_deposit = d_searing_desert
		add_deposit = d_geothermal_vent

		# 1 + 2 (3) mining
		add_deposit = d_mineral_fields
		add_deposit = d_ore_rich_caverns

		# 3 + 2 (5) farming
		add_deposit = d_marvelous_oasis
		add_deposit = d_great_river

		set_planet_flag = tasty_desert
	}
	else_if = {
		limit = {
			OR = {
				is_planet_class = pc_savannah
				is_pd_savannah = yes
			}
		}
		# 2 + 3 (5) energy
		add_deposit = d_searing_desert
		add_deposit = d_geothermal_vent

		# 1 + 2 (3) mining
		add_deposit = d_mineral_fields
		add_deposit = d_prosperous_mesa

		# 3 + 2 (5) farming
		add_deposit = d_black_soil
		add_deposit = d_fertile_lands
	}
	else_if = {
		limit = {
			OR = {
				is_planet_class = pc_continental
				is_pd_continental = yes
			}
		}
		# 2 + 3 (5) energy
		add_deposit = d_rushing_waterfalls
		add_deposit = d_tempestous_mountain

		# 1 + 2 (3) mining
		add_deposit = d_veiny_cliffs
		add_deposit = d_prosperous_mesa

		# 3 + 2 (5) farming
		add_deposit = d_black_soil
		add_deposit = d_fertile_lands
	}
	else_if = {
		limit = {
			OR = {
				is_planet_class = pc_ocean
				is_pd_ocean = yes
			}
		}
		# 2 + 3 (5) energy
		add_deposit = d_rushing_waterfalls
		add_deposit = d_underwater_vent

		# 1 + 2 (3) mining
		add_deposit = d_mineral_fields
		add_deposit = d_ore_rich_caverns

		# 3 + 2 (5) farming
		add_deposit = d_teeming_reef
		add_deposit = d_lush_jungle
	}
	else_if = {
		limit = {
			OR = {
				is_planet_class = pc_tropical
				is_pd_tropical = yes
			}
		}
		# 2 + 3 (5) energy
		add_deposit = d_rushing_waterfalls
		add_deposit = d_tempestous_mountain

		# 1 + 2 (3) mining
		add_deposit = d_mineral_fields
		add_deposit = d_prosperous_mesa

		# 3 + 2 (5) farming
		add_deposit = d_tropical_island
		add_deposit = d_lush_jungle
	}
	else_if = {
		limit = {
			OR = {
				is_planet_class = pc_alpine
				is_pd_alpine = yes
			}
		}
		# 2 + 3 (5) energy
		add_deposit = d_frozen_gas_lake
		add_deposit = d_tempestous_mountain

		# 1 + 2 (3) mining
		add_deposit = d_veiny_cliffs
		add_deposit = d_ore_rich_caverns

		# 3 + 2 (5) farming
		add_deposit = d_fungal_forest
		add_deposit = d_fungal_caves
	}
	else_if = {
		limit = {
			OR = {
				is_planet_class = pc_arctic
				is_pd_arctic = yes
			}
		}
		# 2 + 3 (5) energy
		add_deposit = d_frozen_gas_lake
		add_deposit = d_geothermal_vent

		# 1 + 2 (3) mining
		add_deposit = d_veiny_cliffs
		add_deposit = d_ore_rich_caverns

		# 3 + 2 (5) farming
		add_deposit = d_fungal_forest
		add_deposit = d_fungal_caves
	}
	else_if = {
		limit = {
			OR = {
				is_planet_class = pc_tundra
				is_pd_tundra = yes
			}
		}
		# 2 + 3 (5) energy
		add_deposit = d_frozen_gas_lake
		add_deposit = d_geothermal_vent

		# 1 + 2 (3) mining
		add_deposit = d_mineral_fields
		add_deposit = d_ore_rich_caverns

		# 3 + 2 (5) farming
		add_deposit = d_fungal_forest
		add_deposit = d_fungal_caves
	}
	else_if = {
		limit = {
			OR = {
				is_planet_class = pc_nuked
				is_pd_nuked = yes
			}
		}
		# 2 + 3 (5) energy
		add_deposit = d_searing_desert
		add_deposit = d_underwater_vent

		# 1 + 2 (3) mining
		add_deposit = d_veiny_cliffs
		add_deposit = d_ore_rich_caverns

		# 3 + 2 (5) farming
		add_deposit = d_fungal_forest
		add_deposit = d_fungal_caves
	}
	else = {
		log_error = "unable to initialize planet-class-specific deposits on [This.GetName] for [This.Owner.GetRealName]: not one of the 9 default classes or pc_nuked"
	}
}

# triggered by empire_init_capital_planet
# this = planet (fourth orbit)
generate_jovian_league_sibling3_start_buildings_and_districts = {
	optimize_memory
	if = {
		limit = { owner = { is_hive_empire = yes } }
		add_building = building_hive_capital
		if = {
			limit = {
				owner = {
					NAND = {
						has_origin = origin_jovian_league_necrophage
						has_valid_civic = civic_hive_devouring_swarm
					}
				}
			}
			add_building = building_spawning_pool
		}
	}
	else_if = {
		limit = { owner = { is_machine_empire = yes } }
		add_building = building_deployment_post
		add_building = building_machine_assembly_plant
	}
	else = {
		if = {
			limit = {
				owner = {
					NAND = {
						has_origin = origin_jovian_league_toxic_knights
						is_eager_explorer_empire = yes
					}
				}
			}
			add_building = building_capital
		}
		else = {
			add_building = building_colony_shelter
		}
		if = {
			limit = { owner = { has_origin = origin_jovian_league_mechanists } }
			add_building = building_robot_assembly_plant
		}
		if = {
			limit = { owner = { has_valid_civic = civic_permanent_employment } }
			add_building = building_posthumous_employment_center
		}
	}
	if = {
		limit = {
			owner = {
				has_origin = origin_jovian_league_necrophage
				is_homicidal = no
			}
		}
		add_building = building_necrophage_elevation_chamber
	}
	if = {
		limit = { owner = { is_machine_empire = no } }
		ojl_add_species_appropriate_food_district = yes
		if = {
			limit = { owner = { NOT = { has_origin = origin_jovian_league_toxic_knights } } }
			ojl_add_species_appropriate_food_district = yes
		}
		if = {
			limit = { is_lithoid_empire = no }
			set_colony_type = col_farming
		}
		else = {
			set_colony_type = col_mining
		}
	}
	else = {
		ojl_add_planet_appropriate_commercial_or_generator_district = yes
		ojl_add_planet_appropriate_commercial_or_generator_district = yes
		set_colony_type = col_generator
	}
}

# triggered by empire_init_capital_planet
# this = planet (fourth orbit)
generate_jovian_league_sibling3_start_pops = {
	optimize_memory
	set_variable = {
		which = total_pop_count
		value = 4
	}

	if = {
		limit = { owner = { is_eager_explorer_empire = yes } }
		change_variable = {
			which = total_pop_count
			value = -1
		}
	}

	if = {
		limit = {
			owner = {
				OR = {
					has_origin = origin_jovian_league_syncretic
					has_origin = origin_jovian_league_mechanists
					has_origin = origin_jovian_league_necrophage
					has_valid_civic = civic_machine_assimilator
				}
			}
		}
		set_variable = {
			which = secondary_pop_count
			value = 2
		}
		if = {
			limit = {
				owner = {
					has_origin = origin_jovian_league_necrophage
					OR = {
						is_homicidal = yes
						is_hive_empire = yes
					}
				}
			}
			change_variable = {
				which = secondary_pop_count
				value = -1
			}
		}
	}

	if = {
		limit = { is_variable_set = secondary_pop_count }
		while = {
			count = secondary_pop_count
			create_pop = {
				species = event_target:jovian_league_secondary_species
				ethos = random
				effect = {
					if = {
						limit = { owner = { is_machine_empire = yes } }
						clear_ethos = yes
					}
				}
			}
		}
		clear_variable = secondary_pop_count
	}

	if = {
		limit = { owner = { is_hive_empire = yes } }
		change_variable = {
			which = total_pop_count
			value = 2
		}
	}
	else_if = {
		limit = { owner = { is_machine_empire = yes } }
		change_variable = {
			which = total_pop_count
			value = 1
		}
	}

	if = {
		limit = { owner = { has_origin = origin_jovian_league } }
		change_variable = {
			which = total_pop_count
			value = 1
		}
	}

	while = {
		limit = { num_pops < total_pop_count }
		create_pop = {
			species = owner_species
			ethos = random
			effect = {
				if = {
					limit = { owner = { is_gestalt = yes } }
					clear_ethos = yes
				}
			}
		}
	}

	clear_variable = total_pop_count
	ojl_setup_civic_permanent_employment_zombie_pops = { COUNT = 1 }
	ojl_setup_origin_mechanists_robot_pops = yes
}

# this = system (galactic_object)
generate_jovian_league_system_final_pass = {
	optimize_memory
	adjust_jovian_league_system_resources_for_civics_and_origins = yes
	every_system_planet = {
		limit = { is_colony = yes }
		if = {
			# evict any secondary species pops that got non-worker jobs before necrophage rules kicked in
			limit = { owner = { has_origin = origin_jovian_league_necrophage } }
			every_owned_pop = {
				limit = {
					NOR = {
						has_trait = trait_necrophage
						has_job_category = worker
					}
				}
				unemploy_pop = yes
				clear_pop_category = yes
			}
		}
	}
}

# duplicates logic from necroids.4; does not alter foundation date
# this = planet
generate_jovian_league_necrophage_primitives = {
	optimize_memory
	if = {
		limit = { space_owner = { is_hive_empire = no } }
		generate_very_early_pre_ftls_on_planet = yes
	}
	else = {
		set_planet_flag = pre_ftl_hive_mind
		generate_very_early_pre_ftl_hive_on_planet = yes
	}

	set_name = random
	owner = { establish_communications_no_message = prev.space_owner }
	while = {
		count = 4
		create_army = {
			owner = last_created_country
			type = primitive_additional_army
			species = last_created_country
		}
	}
}

# based on logic from common/scripted_effect/01_start_of_game_effects.txt:ln~3599 toxic_knights_order_habitat_setup
# however, logic here still allows the habitat to be flagged as a special type
# this = planet (around which the habitat should orbit)
generate_jovian_league_toxic_knights_habitat = {
	optimize_memory
	set_planet_flag = has_megastructure
	if = {
		limit = { has_planet_flag = starting_mining_target }
		remove_planet_flag = starting_mining_target
	}
	if = {
		limit = { has_orbital_station = yes }
		orbital_station = { dismantle = yes }
	}
	solar_system = {
		spawn_planet = {
			class = "pc_habitat"
			location = prev
			orbit_location = yes
			orbit_angle_offset = 45
			orbit_distance_offset = 9.899
			size = 6
			has_ring = no
			deposit_blockers = none
			flags = { toxic_knights_habitat megastructure habitat advanced_habitat }
			init_effect = {
				if = {
					limit = { orbit = { has_deposit_for = shipclass_research_station } }
					set_planet_flag = research_habitat
				}
				else_if = {
					limit = {
						orbit = {
							OR = {
								has_deposit = d_minerals_1
								has_deposit = d_minerals_2
								has_deposit = d_minerals_3
								has_deposit = d_minerals_4
								has_deposit = d_minerals_5
								has_deposit = d_minerals_6
								has_deposit = d_minerals_7
								has_deposit = d_minerals_8
								has_deposit = d_minerals_9
								has_deposit = d_minerals_10
								has_deposit = d_alloys_1
								has_deposit = d_alloys_2
								has_deposit = d_alloys_3
								has_deposit = d_alloys_4
								has_deposit = d_alloys_5
								has_deposit = d_alloys_10
								has_deposit = d_alloys_25
							}
						}
					}
					set_planet_flag = mining_habitat
				}
				else_if = {
					limit = {
						orbit = {
							OR = {
								has_deposit = d_energy_1
								has_deposit = d_energy_2
								has_deposit = d_energy_3
								has_deposit = d_energy_4
								has_deposit = d_energy_5
								has_deposit = d_energy_6
								has_deposit = d_energy_7
								has_deposit = d_energy_8
								has_deposit = d_energy_9
								has_deposit = d_energy_10
							}
						}
					}
					set_planet_flag = energy_habitat
				}
				set_owner = space_owner
				set_name = random
				set_planet_entity = {
					entity = "habitat_phase_02_entity"
					graphical_culture = owner
				}
				set_colony_type = col_habitat_fortress
				add_building = building_hab_major_capital
				add_building = building_order_keep
				if = {
					limit = { owner = { has_valid_civic = civic_permanent_employment } }
					add_building = building_posthumous_employment_center
				}
				add_district = district_orders_demesne
				while = {
					count = 4
					create_pop = {
						species = owner_species
						ethos = random
					}
				}
			}
		}
	}
}

# based on logic from common/scripted_effect/01_start_of_game_effects.txt:ln~3777 fear_of_the_dark_binary_planets
# this = planet (space-faring)
generate_jovian_league_fear_of_the_dark_planet = {
	optimize_memory
	space_owner = { save_event_target_as = fotd_country } # needed for built-in effects
	save_global_event_target_as = fotd_seperatist_planet@space_owner
	set_planet_flag = fotd_seperatist_planet@space_owner
	create_fear_of_the_dark_country = yes
	setup_fear_of_the_dark_pre_ftl = yes
}

# this = system (galactic_object)
save_jovian_ideal_design_pc = {
	optimize_memory
	random_system_planet = {
		limit = { has_planet_flag = jovian_league_ideal_planet_class }
		set_variable = {
			which = jovian_league_ideal_planet_class_code
			value = -1
		}

		if = {
			limit = {
				OR = {
					is_planet_class = pc_arid
					is_pd_arid = yes
				}
			}
			set_variable = {
				which = jovian_league_ideal_planet_class_code
				value = 0
			}
		}
		else_if = {
			limit = {
				OR = {
					is_planet_class = pc_desert
					is_pd_desert = yes
				}
			}
			set_variable = {
				which = jovian_league_ideal_planet_class_code
				value = 1
			}
		}
		else_if = {
			limit = {
				OR = {
					is_planet_class = pc_savannah
					is_pd_savannah = yes
				}
			}
			set_variable = {
				which = jovian_league_ideal_planet_class_code
				value = 2
			}
		}
		else_if = {
			limit = {
				OR = {
					is_planet_class = pc_continental
					is_pd_continental = yes
				}
			}
			set_variable = {
				which = jovian_league_ideal_planet_class_code
				value = 3
			}
		}
		else_if = {
			limit = {
				OR = {
					is_planet_class = pc_ocean
					is_pd_ocean = yes
				}
			}
			set_variable = {
				which = jovian_league_ideal_planet_class_code
				value = 4
			}
		}
		else_if = {
			limit = {
				OR = {
					is_planet_class = pc_tropical
					is_pd_tropical = yes
				}
			}
			set_variable = {
				which = jovian_league_ideal_planet_class_code
				value = 5
			}
		}
		else_if = {
			limit = {
				OR = {
					is_planet_class = pc_alpine
					is_pd_alpine = yes
				}
			}
			set_variable = {
				which = jovian_league_ideal_planet_class_code
				value = 6
			}
		}
		else_if = {
			limit = {
				OR = {
					is_planet_class = pc_arctic
					is_pd_arctic = yes
				}
			}
			set_variable = {
				which = jovian_league_ideal_planet_class_code
				value = 7
			}
		}
		else_if = {
			limit = {
				OR = {
					is_planet_class = pc_tundra
					is_pd_tundra = yes
				}
			}
			set_variable = {
				which = jovian_league_ideal_planet_class_code
				value = 8
			}
		}
		else_if = {
			limit = {
				OR = {
					is_planet_class = pc_nuked
					is_pd_nuked = yes
				}
			}
			set_variable = {
				which = jovian_league_ideal_planet_class_code
				value = -1
			}
		}
		else = {
			log = "the planet ideal design class representative is not one of the 9 basic classes or pc_nuked - using the default code"
		}
		prev = {
			set_variable = {
				which = jovian_league_ideal_planet_class_code
				value = prev.jovian_league_ideal_planet_class_code
			}
		}
	}
}

# this = planet
# event_target:jovian_league_species the founder species
change_to_ideal_pc = {
	optimize_memory
	remove_terraforming_candidate_modifiers = yes
	set_planet_flag = prescripted_ideal
	if = {
		limit = {
			space_owner = {
				NOR = {
					has_valid_civic = civic_machine_assimilator
					has_valid_civic = civic_machine_servitor
				}
			}
		}
		change_pc = event_target:jovian_league_species
	}
	else = {
		change_pc = last_created_species
	}
	reroll_deposits = yes
}

# this = planet
change_to_random_secondary_pc = {
	optimize_memory
	if = {
		limit = { prev = { is_variable_set = jovian_league_ideal_planet_class_code } }
		remove_terraforming_candidate_modifiers = yes
		set_variable = {
			which = jovian_league_ideal_planet_class_code
			value = prev.jovian_league_ideal_planet_class_code
		}
		if = {
			limit = { has_modifier = terraforming_candidate }
			remove_modifier = terraforming_candidate
		}
		set_planet_flag = prescripted_secondary
		if = {
			limit = {
				check_variable = {
					which = jovian_league_ideal_planet_class_code
					value = 0
				}
			}
			change_pc = "ojl_rl_habitable_warm_not_arid"
		}
		else_if = {
			limit = {
				check_variable = {
					which = jovian_league_ideal_planet_class_code
					value = 1
				}
			}
			change_pc = "ojl_rl_habitable_warm_not_desert"
		}
		else_if = {
			limit = {
				check_variable = {
					which = jovian_league_ideal_planet_class_code
					value = 2
				}
			}
			change_pc = "ojl_rl_habitable_warm_not_savannah"
		}
		else_if = {
			limit = {
				check_variable = {
					which = jovian_league_ideal_planet_class_code
					value = 3
				}
			}
			change_pc = "ojl_rl_habitable_temperate_not_continental"
		}
		else_if = {
			limit = {
				check_variable = {
					which = jovian_league_ideal_planet_class_code
					value = 4
				}
			}
			change_pc = "ojl_rl_habitable_temperate_not_ocean"
		}
		else_if = {
			limit = {
				check_variable = {
					which = jovian_league_ideal_planet_class_code
					value = 5
				}
			}
			change_pc = "ojl_rl_habitable_temperate_not_tropical"
		}
		else_if = {
			limit = {
				check_variable = {
					which = jovian_league_ideal_planet_class_code
					value = 6
				}
			}
			change_pc = "ojl_rl_habitable_cool_not_alpine"
		}
		else_if = {
			limit = {
				check_variable = {
					which = jovian_league_ideal_planet_class_code
					value = 7
				}
			}
			change_pc = "ojl_rl_habitable_cool_not_arctic"
		}
		else_if = {
			limit = {
				check_variable = {
					which = jovian_league_ideal_planet_class_code
					value = 8
				}
			}
			change_pc = "ojl_rl_habitable_cool_not_tundra"
		}
		else_if = {
			limit = {
				OR = {
					check_variable = {
						which = jovian_league_ideal_planet_class_code
						value < 0
					}
					check_variable = {
						which = jovian_league_ideal_planet_class_code
						value > 8
					}
				}
			}
			change_pc = pc_nuked
		}
		reroll_deposits = yes
		reroll_random = yes
	}
	else = {
		log_error = "cannot set planet class to a random secondary if jovian_league_ideal_planet_class_code is not set"
	}
}

# this = planet
change_to_random_normal_pc = {
	optimize_memory
	remove_terraforming_candidate_modifiers = yes
	change_pc = "rl_habitable_normal"
	reroll_deposits = yes
	reroll_random = yes
}

# this = planet
remove_terraforming_candidate_modifiers = {
	optimize_memory
	if = {
		limit = { has_modifier = terraforming_candidate }
		remove_modifier = terraforming_candidate
	}
	if = {
		limit = { has_modifier = frozen_terraforming_candidate }
		remove_modifier = frozen_terraforming_candidate
	}
	if = {
		limit = { has_modifier = toxic_terraforming_candidate }
		remove_modifier = toxic_terraforming_candidate
	}
}

# this = planet
ojl_add_planet_appropriate_mining_district = {
	optimize_memory
	if = {
		limit = { ojl_planet_uses_district_mining_uncapped = yes }
		add_district = district_mining_uncapped
	}
	else = {
		add_district = district_mining
	}
}

# this = planet
ojl_add_planet_appropriate_commercial_or_generator_district = {
	optimize_memory
	if = {
		limit = { ojl_planet_uses_district_srw_commercial = yes }
		add_district = district_srw_commercial
	}
	else_if = {
		limit = { ojl_planet_uses_district_generator_uncapped = yes }
		add_district = district_generator_uncapped
	}
	else = {
		add_district = district_generator
	}
}

# this = planet
ojl_add_species_appropriate_food_district = {
	optimize_memory
	if = {
		limit = {
			exists = owner
			owner = {
				is_lithoid_empire = no
				is_machine_empire = no
			}
		}
		ojl_add_planet_appropriate_farming_district = yes
	}
	else = {
		ojl_add_planet_appropriate_mining_district = yes
	}
}

# this = planet
ojl_add_planet_appropriate_farming_district = {
	optimize_memory
	if = {
		limit = { ojl_planet_uses_district_farming_uncapped = yes }
		add_district = district_farming_uncapped
	}
	else = {
		add_district = district_farming
	}
}

# this = planet
ojl_add_authority_appropriate_housing_district = {
	optimize_memory
	if = {
		limit = { owner = { is_hive_empire = yes } }
		add_district = district_hive
	}
	else_if = {
		limit = { owner = { is_machine_empire = yes } }
		add_district = district_nexus
	}
	else = {
		add_district = district_city
	}
}

# this = planet
# COUNT = number of Pops to which to apply trait_zombie
ojl_setup_civic_permanent_employment_zombie_pops = {
	optimize_memory
	if = {
		limit = { owner = { has_civic = civic_permanent_employment } }
		while = {
			count = $COUNT$
			random_owned_pop = {
				limit = {
					NOT = { has_trait = trait_zombie }
					has_job_category = worker
					is_robot_pop = no
				}
				modify_species = {
					species = this
					add_trait = trait_zombie
					add_traits_at_start_of_list = yes
				}
				if = {
					limit = { has_trait = trait_syncretic_proles }
					modify_species = {
						species = this
						remove_trait = trait_syncretic_proles
					}
				}
			}
		}
	}
}

# duplicates logic from common/scripted_effects/01_start_of_game_effects.txt for setting up mechanist pre-modded robots
# this = planet
ojl_setup_origin_mechanists_robot_pops = {
	if = {
		limit = { owner = { has_origin = origin_jovian_league_mechanists } }
		every_owned_pop = {
			limit = { is_robotic_species = yes }
			if = {
				limit = { has_job = miner }
				modify_species = {
					species = this
					add_trait = trait_robot_power_drills
					add_trait = trait_robot_bulky
					add_trait = trait_robot_high_maintenance
					add_traits_at_start_of_list = yes
				}
			}
			else_if = {
				limit = {
					OR = {
						has_job = farmer
						has_job = angler
					}
				}
				modify_species = {
					species = this
					add_trait = trait_robot_harvesters
					add_trait = trait_robot_bulky
					add_trait = trait_robot_high_maintenance
					add_traits_at_start_of_list = yes
				}
			}
			else_if = {
				limit = { has_job = technician }
				modify_species = {
					species = this
					add_trait = trait_robot_superconductive
					add_trait = trait_robot_bulky
					add_trait = trait_robot_high_maintenance
					add_traits_at_start_of_list = yes
				}
			}
		}
	}
}